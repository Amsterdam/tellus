"""
Django settings for tellus project.

Generated by 'django-admin startproject' using Django 1.9.2.

For more information on this file, see
https://docs.djangoproject.com/en/1.9/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.9/ref/settings/
"""
import os
import sys

import sentry_sdk
from sentry_sdk.integrations.django import DjangoIntegration

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# SECURITY WARNING: keep the secret key used in production secret!
insecure_key = "insecure"
SECRET_KEY = os.getenv("SECRET_KEY", insecure_key)

DEBUG = os.getenv("DEBUG", False) == "True"

ALLOWED_HOSTS = ["*"]

# PROJECT_APPS = [
#     "datapunt_api",
#     "api",
#     "tellus",
#     "datasets.tellus_data",
# ]


DATAPUNT_API_URL = os.getenv("DATAPUNT_API_URL", "https://api.data.amsterdam.nl/")

if DEBUG:
    DATAPUNT_API_URL = "http://localhost:8000/"

# Application definition
INSTALLED_APPS = [
    # django
    "django.contrib.contenttypes",
    "django.contrib.staticfiles",
    # external libs
    "datapunt_api",
    "django_filters",
    "django.contrib.gis",
    "rest_framework",
    "rest_framework_gis",
    "drf_yasg",
    "django_extensions",
    # internal apps
    "health",
    "api",
    "datasets.tellus_data",
]


INTERNAL_IPS = ("127.0.0.1", "0.0.0.0")

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.middleware.common.CommonMiddleware",
    "authorization_django.authorization_middleware",
]

if DEBUG:
    INSTALLED_APPS += (
        "debug_toolbar",
        "corsheaders",
    )

    MIDDLEWARE = (
        "django.middleware.security.SecurityMiddleware",
        "corsheaders.middleware.CorsMiddleware",
        "django.middleware.common.CommonMiddleware",
        "debug_toolbar.middleware.DebugToolbarMiddleware",
    )

    CORS_ORIGIN_ALLOW_ALL = True


ROOT_URLCONF = "main.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "main.wsgi.application"


DATABASES = {
    "default": {
        "ENGINE": "django.contrib.gis.db.backends.postgis",
        "NAME": os.getenv("DATABASE_NAME", "dev"),
        "USER": os.getenv("DATABASE_USER", "dev"),
        "PASSWORD": os.getenv("DATABASE_PASSWORD", "dev"),
        "HOST": os.getenv("DATABASE_HOST", "database"),
        "PORT": os.getenv("DATABASE_PORT", "5432"),
    }
}

# Internationalization
# https://docs.djangoproject.com/en/1.9/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_L10N = True

USE_TZ = True

DUMP_DIR = "mks-dump"

TESTING = len(sys.argv) > 1 and sys.argv[1] == "test"

REST_FRAMEWORK = dict(
    PAGE_SIZE=100,
    UNAUTHENTICATED_USER={},
    UNAUTHENTICATED_TOKEN={},
    MAX_PAGINATE_BY=100,
    DEFAULT_AUTHENTICATION_CLASSES=(
        "rest_framework.authentication.BasicAuthentication",
        "rest_framework.authentication.SessionAuthentication",
    ),
    DEFAULT_PAGINATION_CLASS="drf_hal_json.pagination.HalPageNumberPagination",
    DEFAULT_PARSER_CLASSES=("drf_hal_json.parsers.JsonHalParser",),
    DEFAULT_RENDERER_CLASSES=(
        "rest_framework.renderers.JSONRenderer",
        "rest_framework.renderers.BrowsableAPIRenderer",
    ),
    DEFAULT_FILTER_BACKENDS=("django_filters.rest_framework.DjangoFilterBackend",),
    COERCE_DECIMAL_TO_STRING=True,
)


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.9/howto/static-files/

STATIC_URL = "/tellus/static/"

STATIC_ROOT = os.path.abspath(os.path.join(BASE_DIR, "..", "static"))

HEALTH_MODEL = "tellus_data.Telling"

LOGGING = {
    "version": 1,
    "disable_existing_loggers": False,
    "formatters": {
        "console": {"format": "%(asctime)s - %(name)s - %(levelname)s - %(message)s"},
    },
    "handlers": {
        "console": {
            "level": "DEBUG",
            "class": "logging.StreamHandler",
            "formatter": "console",
        },
    },
    "root": {"level": "INFO", "handlers": ["console"]},
    "loggers": {
        "django.db": {"handlers": ["console"], "level": "ERROR"},
        "flake8": {"handlers": ["console"], "level": "WARNING"},
        "django": {"handlers": ["console"], "level": "ERROR"},
        # Debug all batch jobs
        "doc": {"handlers": ["console"], "level": "INFO", "propagate": False},
        "index": {"handlers": ["console"], "level": "DEBUG", "propagate": False},
        "search": {"handlers": ["console"], "level": "ERROR", "propagate": False},
        "elasticsearch": {
            "handlers": ["console"],
            "level": "ERROR",
            "propagate": False,
        },
        "urllib3": {"handlers": ["console"], "level": "ERROR", "propagate": False},
        "factory.containers": {
            "handlers": ["console"],
            "level": "INFO",
            "propagate": False,
        },
        "factory.generate": {
            "handlers": ["console"],
            "level": "INFO",
            "propagate": False,
        },
        "requests.packages.urllib3.connectionpool": {
            "handlers": ["console"],
            "level": "ERROR",
            "propagate": False,
        },
        # Log all unhandled exceptions
        "django.request": {
            "handlers": ["console"],
            "level": "ERROR",
            "propagate": False,
        },
    },
}


# The following JWKS data was obtained in the authz project :
# jwkgen -create -alg ES256
# This is a test public/private key def and added for testing.
JWKS_TEST_KEY = """
    {
        "keys": [
            {
                "kty": "EC",
                "key_ops": [
                    "verify",
                    "sign"
                ],
                "kid": "2aedafba-8170-4064-b704-ce92b7c89cc6",
                "crv": "P-256",
                "x": "6r8PYwqfZbq_QzoMA4tzJJsYUIIXdeyPA27qTgEJCDw=",
                "y": "Cf2clfAfFuuCB06NMfIat9ultkMyrMQO9Hd2H7O9ZVE=",
                "d": "N1vu0UQUp0vLfaNeM0EDbl4quvvL6m_ltjoAXXzkI3U="
            }
        ]
    }
"""

DATAPUNT_AUTHZ = {
    "JWKS": os.getenv("PUB_JWKS", JWKS_TEST_KEY),
    "MIN_SCOPE": "TLLS/R",
    "FORCED_ANONYMOUS_ROUTES": (
        "/status/",
        "/tellus/meetlocatie/",
        "/tellus/lengte_interval/",
        "/tellus/snelheids_interval/",
        "/tellus/snelheids_categorie/",
        "/tellus/representatief_categorie/",
        "/tellus/validatie_categorie/",
        "/tellus/meetraai_categorie/",
        "/tellus/tellus/",
        "/tellus/tel_richting/",
        "/tellus/swagger.yaml",
        "/tellus/redoc/",
    ),
}

# drf_yasg Swagger generation settings
SWAGGER_SETTINGS = {
    "USE_SESSION_AUTH": False,
    "SECURITY_DEFINITIONS": {
        "OAuth2": {
            "type": "oauth2",
            "authorizationUrl": "/oauth2/authorize",
            "flow": "implicit",
            "scopes": {"TLLS/R": "Read tellus"},
        }
    },
    "SECURITY_REQUIREMENTS": {},  # No global scope required, only per api
}

SENTRY_DSN = os.getenv("SENTRY_DSN")
if SENTRY_DSN:
    sentry_sdk.init(
        dsn=SENTRY_DSN,
        integrations=[DjangoIntegration()],
        ignore_errors=["ExpiredSignatureError"],
    )
